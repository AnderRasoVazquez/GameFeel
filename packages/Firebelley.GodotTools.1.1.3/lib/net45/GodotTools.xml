<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GodotTools</name>
    </assembly>
    <members>
        <member name="M:GodotTools.Extension.NodeExtensions.SetNodesByDeclaredNodePaths(Godot.Node)">
            <summary>
            Uses reflection to find non-public NodePath fields. It is assumed that declared NodePath field names end with "Path". 
            This method will use reflection to find the corresponding Node field by removing "Path" from the name and matching on the result.
            For example, a NodePath field with name "_labelPath" will automatically try to set the non-public field "_label" to the node present at the NodePath location.
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:GodotTools.Extension.Physics2DDirectSpaceStateExtensions.Raycast(Godot.Physics2DDirectSpaceState,Godot.Vector2,Godot.Vector2,Godot.Collections.Array,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns a RaycastResult if there is a collision, otherwise returns null.
            </summary>
            <param name="state"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="exclude"></param>
            <param name="collisionLayer"></param>
            <param name="collideWithBodies"></param>
            <param name="collideWithAreas"></param>
            <returns></returns>
        </member>
        <member name="M:GodotTools.Extension.ResourcePreloaderExtension.InstanceScene``1(Godot.ResourcePreloader,System.String)">
            <summary>
            Instances a scene with the resource name. Returns null if resource was not found or was not a packed scene.
            </summary>
            <param name="preloader"></param>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GodotTools.Logic.StateExecutorMachine.Update">
            <summary>
            Call every frame to update the state machine.
            </summary>
        </member>
    </members>
</doc>
